<?php

/**
 * @file
 * Provides Intense images integration.
 */

use Drupal\Component\Utility\Html;

/**
 * Implements hook_library_info_alter().
 */
function intense_library_info_alter(&$libraries, $extension) {
  if ($extension === 'intense' && (intense_libraries_get_path('intense') || intense_libraries_get_path('intense-images'))) {
    $path = intense_libraries_get_path('intense') ?: intense_libraries_get_path('intense-images');
    $libraries['intense']['js'] = ['/' . $path . '/intense.min.js' => []];
  }
}

/**
 * Implements hook_blazy_attach_alter().
 */
function intense_blazy_attach_alter(array &$load, $attach = []) {
  if (!empty($attach['intense'])) {
    $load['library'][] = 'intense/load';
  }
}

/**
 * Implements hook_blazy_lightboxes_alter().
 */
function intense_blazy_lightboxes_alter(array &$lightboxes) {
  $lightboxes[] = 'intense';
}

/**
 * Implements hook_blazy_alter().
 */
function intense_blazy_alter(array &$image, $settings = []) {
  if (!empty($settings['media_switch']) && $settings['media_switch'] == 'intense') {
    $image['#pre_render'][] = 'intense_pre_render';
  }
}

/**
 * The #pre_render callback: Sets Intense related URL attributes.
 */
function intense_pre_render($image) {
  // Intense accept captions within [data-attribute], satisfy.
  if (isset($image['#captions']) && !empty($image['#captions']['lightbox'])) {
    $caption = $image['#captions']['lightbox']['#markup'];
    $dom = Html::load($caption);
    foreach (['h2' => 'title', 'p' => 'caption'] as $tag => $attribute) {
      if ($dom->getElementsByTagName($tag) && $dom->getElementsByTagName($tag)->item(0)) {
        $image['#url_attributes']['data-' . $attribute] = strip_tags($dom->getElementsByTagName($tag)->item(0)->textContent);
      }
    }
  }
  return $image;
}

/**
 * Provides a wrapper to replace deprecated libraries_get_path() at ease.
 *
 * @todo replace with blazy_libraries_get_path() post blazy:8.x-2.0.
 */
function intense_libraries_get_path($name, $base_path = FALSE) {
  if (function_exists('blazy_libraries_get_path')) {
    return blazy_libraries_get_path($name, $base_path);
  }
  if (\Drupal::hasService('library.libraries_directory_file_finder')) {
    return \Drupal::service('library.libraries_directory_file_finder')->find($name);
  }

  $function = 'libraries_get_path';
  return is_callable($function) ? $function($name, $base_path) : FALSE;
}

/**
 * Implements hook_help().
 */
function intense_help($route_name) {
  if ($route_name == 'help.page.intense') {
    $output = file_get_contents(dirname(__FILE__) . '/README.md');
    // @todo remove check once Blazy has stable release.
    return function_exists('blazy_parse_markdown') ? blazy_parse_markdown($output) : '<pre>' . $output . '</pre>';
  }
  return '';
}
